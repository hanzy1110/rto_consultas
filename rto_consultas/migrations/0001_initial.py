# Generated by Django 4.2.3 on 2023-08-25 18:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Adjuntos",
            fields=[
                (
                    "idarchivo",
                    models.IntegerField(
                        db_column="idArchivo", primary_key=True, serialize=False
                    ),
                ),
                ("nombre", models.CharField(db_column="Nombre", max_length=200)),
                ("idverificacion", models.IntegerField(db_column="idVerificacion")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
            ],
            options={
                "db_table": "adjuntos",
            },
        ),
        migrations.CreateModel(
            name="Adjuntosauditoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("archivo", models.CharField(db_column="Archivo", max_length=200)),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "adjuntosauditoria",
            },
        ),
        migrations.CreateModel(
            name="Adjuntosexcepcion",
            fields=[
                (
                    "idadjuntosexcepcion",
                    models.IntegerField(
                        db_column="idAdjuntosExcepcion",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("archivo", models.CharField(max_length=255)),
                ("fechacarga", models.DateField(db_column="fechaCarga")),
                ("replicado", models.IntegerField()),
                ("activo", models.IntegerField()),
            ],
            options={
                "db_table": "adjuntosexcepcion",
            },
        ),
        migrations.CreateModel(
            name="Adjuntosmantenimientos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("idmantenimiento", models.IntegerField(db_column="idMantenimiento")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("archivo", models.CharField(db_column="Archivo", max_length=200)),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
            ],
            options={
                "db_table": "adjuntosmantenimientos",
            },
        ),
        migrations.CreateModel(
            name="Adjuntospendientes",
            fields=[
                (
                    "idarchivo",
                    models.IntegerField(
                        db_column="idArchivo", primary_key=True, serialize=False
                    ),
                ),
                ("nombre", models.CharField(db_column="Nombre", max_length=200)),
                ("idpendiente", models.IntegerField(db_column="idPendiente")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
            ],
            options={
                "db_table": "adjuntospendientes",
            },
        ),
        migrations.CreateModel(
            name="Adjuntosprorroga",
            fields=[
                (
                    "idadjuntosprorroga",
                    models.IntegerField(
                        db_column="idAdjuntosProrroga",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("archivo", models.CharField(max_length=255)),
                ("fechacarga", models.DateField(db_column="fechaCarga")),
                ("replicado", models.IntegerField()),
                ("activo", models.IntegerField()),
            ],
            options={
                "db_table": "adjuntosprorroga",
            },
        ),
        migrations.CreateModel(
            name="Administrativos",
            fields=[
                (
                    "idadministrativo",
                    models.IntegerField(
                        db_column="idAdministrativo", primary_key=True, serialize=False
                    ),
                ),
                ("apellido", models.CharField(db_column="Apellido", max_length=50)),
                ("nombre", models.CharField(db_column="Nombre", max_length=50)),
                ("fechadesde", models.DateField(db_column="FechaDesde")),
                (
                    "fechahasta",
                    models.DateField(blank=True, db_column="FechaHasta", null=True),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("cuit", models.CharField(db_column="Cuit", max_length=15)),
                ("usuario", models.CharField(db_column="Usuario", max_length=50)),
                (
                    "claveinicial",
                    models.CharField(db_column="ClaveInicial", max_length=100),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                ("replicado", models.IntegerField(db_column="Replicado")),
            ],
            options={
                "db_table": "administrativos",
            },
        ),
        migrations.CreateModel(
            name="Administrativosusuarios",
            fields=[
                (
                    "idtaller",
                    models.IntegerField(
                        db_column="idTaller", primary_key=True, serialize=False
                    ),
                ),
                ("idusuario", models.IntegerField(db_column="idUsuario")),
                ("idadministrativo", models.IntegerField(db_column="idAdministrativo")),
            ],
            options={
                "db_table": "administrativosusuarios",
            },
        ),
        migrations.CreateModel(
            name="Auditorias",
            fields=[
                (
                    "idauditoria",
                    models.IntegerField(
                        db_column="idAuditoria", primary_key=True, serialize=False
                    ),
                ),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("fecha", models.DateField(db_column="Fecha")),
                ("observaciones", models.TextField(db_column="Observaciones")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "auditorias",
            },
        ),
        migrations.CreateModel(
            name="Categorias",
            fields=[
                (
                    "idcategoria",
                    models.AutoField(
                        db_column="idCategoria", primary_key=True, serialize=False
                    ),
                ),
                ("tipouso", models.CharField(db_column="tipoUso", max_length=11)),
                (
                    "tipovehiculo",
                    models.CharField(db_column="tipoVehiculo", max_length=100),
                ),
                ("categoria", models.CharField(db_column="Categoria", max_length=100)),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
                ("rangos", models.CharField(db_column="Rangos", max_length=200)),
                ("activa", models.IntegerField(db_column="Activa")),
            ],
            options={
                "db_table": "categorias",
            },
        ),
        migrations.CreateModel(
            name="CccfAdjuntoscertificados",
            fields=[
                (
                    "idadjunto",
                    models.AutoField(
                        db_column="idAdjunto", primary_key=True, serialize=False
                    ),
                ),
                ("idcertificado", models.IntegerField(db_column="idCertificado")),
                (
                    "nombrearchivo",
                    models.CharField(db_column="NombreArchivo", max_length=200),
                ),
            ],
            options={
                "db_table": "cccf_adjuntoscertificados",
            },
        ),
        migrations.CreateModel(
            name="CccfCertificadoexcesos",
            fields=[
                (
                    "idcertificadoexceso",
                    models.AutoField(
                        db_column="idCertificadoExceso",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("numero", models.PositiveIntegerField(db_column="Numero")),
                ("fecha", models.DateField(db_column="Fecha")),
                ("hora", models.TimeField(db_column="Hora")),
                (
                    "velocidadsobrepaso",
                    models.FloatField(db_column="VelocidadSobrepaso"),
                ),
                (
                    "tiempovelocidadexceso",
                    models.CharField(db_column="TiempoVelocidadExceso", max_length=50),
                ),
            ],
            options={
                "db_table": "cccf_certificadoexcesos",
            },
        ),
        migrations.CreateModel(
            name="CccfCertificados",
            fields=[
                (
                    "idcertificado",
                    models.AutoField(
                        db_column="idCertificado", primary_key=True, serialize=False
                    ),
                ),
                (
                    "nrocertificado",
                    models.BigIntegerField(db_column="NroCertificado", unique=True),
                ),
                ("fechahoracarga", models.DateTimeField(db_column="FechaHoraCarga")),
                ("fechacalibracion", models.DateField(db_column="FechaCalibracion")),
                ("fechavencimiento", models.DateField(db_column="FechaVencimiento")),
                (
                    "propusuario",
                    models.CharField(
                        blank=True, db_column="PropUsuario", max_length=50, null=True
                    ),
                ),
                ("dominio", models.CharField(db_column="Dominio", max_length=10)),
                ("nrointerno", models.CharField(db_column="NroInterno", max_length=50)),
                ("kilometraje", models.IntegerField(db_column="Kilometraje")),
                ("tacmarca", models.CharField(db_column="TacMarca", max_length=50)),
                ("tactipo", models.CharField(db_column="TacTipo", max_length=50)),
                ("tacmodelo", models.CharField(db_column="TacModelo", max_length=50)),
                (
                    "tacnroserie",
                    models.CharField(db_column="TacNroSerie", max_length=50),
                ),
                ("relw", models.CharField(db_column="RelW", max_length=50)),
                ("constantek", models.CharField(db_column="ConstanteK", max_length=50)),
                (
                    "rodado_eje1",
                    models.CharField(
                        blank=True, db_column="Rodado_Eje1", max_length=50, null=True
                    ),
                ),
                (
                    "rodado_eje2",
                    models.CharField(
                        blank=True, db_column="Rodado_Eje2", max_length=50, null=True
                    ),
                ),
                (
                    "rodado_eje3",
                    models.CharField(
                        blank=True, db_column="Rodado_Eje3", max_length=50, null=True
                    ),
                ),
                (
                    "rodado_eje4",
                    models.CharField(
                        blank=True, db_column="Rodado_Eje4", max_length=50, null=True
                    ),
                ),
                (
                    "rodado_eje5",
                    models.CharField(
                        blank=True, db_column="Rodado_Eje5", max_length=50, null=True
                    ),
                ),
                ("precinto", models.CharField(db_column="Precinto", max_length=50)),
                ("impresora", models.CharField(db_column="Impresora", max_length=50)),
                ("nroinforme", models.CharField(db_column="NroInforme", max_length=50)),
                ("canthojas", models.CharField(db_column="CantHojas", max_length=50)),
                ("observaciones", models.TextField(db_column="Observaciones")),
                ("usuario", models.CharField(max_length=50)),
                (
                    "idestado",
                    models.IntegerField(
                        db_column="idEstado", verbose_name="Calificación"
                    ),
                ),
                (
                    "fechaanulacion",
                    models.DateField(blank=True, db_column="FechaAnulacion", null=True),
                ),
                (
                    "observacionesanulacion",
                    models.TextField(
                        blank=True, db_column="ObservacionesAnulacion", null=True
                    ),
                ),
                ("patentemercosur", models.IntegerField(db_column="PatenteMercosur")),
                (
                    "cbverificador",
                    models.CharField(
                        blank=True, db_column="CBVerificador", max_length=24, null=True
                    ),
                ),
                (
                    "sinexcesos",
                    models.IntegerField(blank=True, db_column="SinExcesos", null=True),
                ),
                (
                    "desconexioncantidad",
                    models.IntegerField(db_column="DesconexionCantidad"),
                ),
                ("desconexionhora", models.FloatField(db_column="DesconexionHora")),
                ("aperturaequipo", models.IntegerField(db_column="AperturaEquipo")),
                (
                    "retiroelementograbacion",
                    models.IntegerField(db_column="RetiroElementoGrabacion"),
                ),
                (
                    "fallasdispositivo",
                    models.CharField(db_column="FallasDispositivo", max_length=500),
                ),
                (
                    "faltainformacion",
                    models.CharField(db_column="FaltaInformacion", max_length=50),
                ),
                (
                    "cb",
                    models.CharField(
                        blank=True, db_column="CB", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "db_table": "cccf_certificados",
            },
        ),
        migrations.CreateModel(
            name="CccfEmpresas",
            fields=[
                (
                    "idempresa",
                    models.AutoField(
                        db_column="idEmpresa", primary_key=True, serialize=False
                    ),
                ),
                ("cuit", models.BigIntegerField(db_column="CUIT", unique=True)),
                (
                    "razonsocial",
                    models.CharField(db_column="RazonSocial", max_length=150),
                ),
            ],
            options={
                "db_table": "cccf_empresas",
            },
        ),
        migrations.CreateModel(
            name="CccfEstados",
            fields=[
                (
                    "idestado",
                    models.IntegerField(
                        db_column="idEstado", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=50),
                ),
            ],
            options={
                "db_table": "cccf_estados",
            },
        ),
        migrations.CreateModel(
            name="CccfNroscertificadosasignados",
            fields=[
                (
                    "nrocertificado",
                    models.BigIntegerField(
                        db_column="NroCertificado", primary_key=True, serialize=False
                    ),
                ),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
                ("disponible", models.IntegerField(db_column="Disponible")),
            ],
            options={
                "db_table": "cccf_nroscertificadosasignados",
            },
        ),
        migrations.CreateModel(
            name="CccfTalleres",
            fields=[
                (
                    "idtaller",
                    models.AutoField(
                        db_column="idTaller", primary_key=True, serialize=False
                    ),
                ),
                ("nrotaller", models.IntegerField(db_column="NroTaller")),
                ("nombre", models.CharField(db_column="Nombre", max_length=100)),
                (
                    "cuit",
                    models.CharField(
                        blank=True, db_column="CUIT", max_length=30, null=True
                    ),
                ),
                (
                    "idlocalidad",
                    models.IntegerField(blank=True, db_column="idLocalidad", null=True),
                ),
                (
                    "domicilio",
                    models.CharField(
                        blank=True, db_column="Domicilio", max_length=250, null=True
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                (
                    "fechabaja",
                    models.DateField(blank=True, db_column="FechaBaja", null=True),
                ),
            ],
            options={
                "db_table": "cccf_talleres",
            },
        ),
        migrations.CreateModel(
            name="CccfUsuarios",
            fields=[
                (
                    "idusuario",
                    models.AutoField(
                        db_column="idUsuario", primary_key=True, serialize=False
                    ),
                ),
                (
                    "usuario",
                    models.CharField(db_column="Usuario", max_length=50, unique=True),
                ),
                ("clave", models.CharField(db_column="Clave", max_length=100)),
                ("idperfil", models.IntegerField(db_column="idPerfil")),
                ("apellido", models.CharField(db_column="Apellido", max_length=50)),
                ("nombre", models.CharField(db_column="Nombre", max_length=50)),
                ("email", models.CharField(db_column="Email", max_length=100)),
                ("activo", models.IntegerField(db_column="Activo")),
            ],
            options={
                "db_table": "cccf_usuarios",
            },
        ),
        migrations.CreateModel(
            name="Certificados",
            fields=[
                (
                    "idcertificado",
                    models.IntegerField(
                        db_column="idCertificado", primary_key=True, serialize=False
                    ),
                ),
                ("nrocertificado", models.BigIntegerField(db_column="NroCertificado")),
                ("fecha", models.DateField(db_column="Fecha")),
                ("hora", models.TimeField(db_column="Hora")),
                ("idestado", models.IntegerField(db_column="idEstado")),
                ("vigenciahasta", models.DateField(db_column="VigenciaHasta")),
                ("anulado", models.IntegerField(db_column="Anulado")),
                (
                    "fechaanulacion",
                    models.DateField(blank=True, db_column="FechaAnulacion", null=True),
                ),
                (
                    "horaanulacion",
                    models.TimeField(blank=True, db_column="HoraAnulacion", null=True),
                ),
                (
                    "observaciones",
                    models.TextField(blank=True, db_column="Observaciones", null=True),
                ),
                (
                    "auditoria",
                    models.TextField(blank=True, db_column="Auditoria", null=True),
                ),
                ("serie", models.CharField(db_column="Serie", max_length=1)),
                (
                    "idcategoria",
                    models.IntegerField(blank=True, db_column="idCategoria", null=True),
                ),
                (
                    "porcentajecategoria",
                    models.DecimalField(
                        blank=True,
                        db_column="porcentajeCategoria",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("vencido", models.IntegerField(db_column="Vencido")),
                ("reverificado", models.IntegerField(db_column="Reverificado")),
                (
                    "idhabf1",
                    models.IntegerField(blank=True, db_column="idHabF1", null=True),
                ),
                (
                    "idhabf2",
                    models.IntegerField(blank=True, db_column="idHabF2", null=True),
                ),
                (
                    "intentosobtencionhab",
                    models.IntegerField(
                        blank=True, db_column="IntentosObtencionHab", null=True
                    ),
                ),
            ],
            options={
                "db_table": "certificados",
            },
        ),
        migrations.CreateModel(
            name="Certificadosasignadosportaller",
            fields=[
                (
                    "nrocertificado",
                    models.BigIntegerField(
                        db_column="NroCertificado", primary_key=True, serialize=False
                    ),
                ),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
                ("disponible", models.IntegerField(db_column="Disponible")),
                ("replicado", models.IntegerField(db_column="Replicado")),
            ],
            options={
                "db_table": "certificadosasignadosportaller",
            },
        ),
        migrations.CreateModel(
            name="Clasesservicios",
            fields=[
                (
                    "idclaseservicio",
                    models.AutoField(
                        db_column="idClaseServicio", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=200),
                ),
            ],
            options={
                "db_table": "clasesservicios",
            },
        ),
        migrations.CreateModel(
            name="Convenios",
            fields=[
                (
                    "idconvenio",
                    models.AutoField(
                        db_column="idConvenio", primary_key=True, serialize=False
                    ),
                ),
                (
                    "nroconvenio",
                    models.IntegerField(db_column="NroConvenio", unique=True),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=500),
                ),
                ("formula", models.CharField(db_column="Formula", max_length=100)),
                ("vigente", models.IntegerField(db_column="Vigente")),
                (
                    "leyaplica",
                    models.CharField(
                        blank=True, db_column="LeyAplica", max_length=100, null=True
                    ),
                ),
                (
                    "imagen",
                    models.CharField(
                        blank=True, db_column="Imagen", max_length=100, null=True
                    ),
                ),
            ],
            options={
                "db_table": "convenios",
            },
        ),
        migrations.CreateModel(
            name="Defectos",
            fields=[
                (
                    "iddefecto",
                    models.AutoField(
                        db_column="idDefecto", primary_key=True, serialize=False
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        db_collation="utf8mb3_general_ci",
                        db_column="Codigo",
                        max_length=10,
                        unique=True,
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        db_collation="utf8mb3_general_ci",
                        db_column="Descripcion",
                        max_length=250,
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
            ],
            options={
                "db_table": "defectos",
            },
        ),
        migrations.CreateModel(
            name="Direcotrestecnicos",
            fields=[
                (
                    "iddirector",
                    models.IntegerField(
                        db_column="idDirector", primary_key=True, serialize=False
                    ),
                ),
                ("apellido", models.CharField(db_column="Apellido", max_length=50)),
                ("nombre", models.CharField(db_column="Nombre", max_length=50)),
                ("matricula", models.CharField(db_column="Matricula", max_length=50)),
                (
                    "curriculum",
                    models.CharField(db_column="Curriculum", max_length=200),
                ),
                ("fechadesde", models.DateField(db_column="FechaDesde")),
                (
                    "fechahasta",
                    models.DateField(blank=True, db_column="FechaHasta", null=True),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("cuit", models.CharField(db_column="Cuit", max_length=15)),
                ("usuario", models.CharField(db_column="Usuario", max_length=50)),
                (
                    "claveinicial",
                    models.CharField(db_column="ClaveInicial", max_length=100),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                ("replicado", models.IntegerField(db_column="Replicado")),
            ],
            options={
                "db_table": "direcotrestecnicos",
            },
        ),
        migrations.CreateModel(
            name="Equipos",
            fields=[
                (
                    "idequipo",
                    models.IntegerField(
                        db_column="idEquipo", primary_key=True, serialize=False
                    ),
                ),
                ("nroserie", models.CharField(db_column="NroSerie", max_length=50)),
                ("tipo", models.CharField(db_column="Tipo", max_length=50)),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
                ("marca", models.CharField(db_column="Marca", max_length=50)),
                ("modelo", models.CharField(db_column="Modelo", max_length=50)),
                ("nrointerno", models.CharField(db_column="NroInterno", max_length=20)),
                (
                    "nrolinea",
                    models.IntegerField(blank=True, db_column="NroLinea", null=True),
                ),
                (
                    "periodicidadmantenimiento",
                    models.IntegerField(db_column="PeriodicidadMantenimiento"),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                (
                    "fechabaja",
                    models.DateField(blank=True, db_column="FechaBaja", null=True),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "equipos",
            },
        ),
        migrations.CreateModel(
            name="Estados",
            fields=[
                (
                    "idestado",
                    models.AutoField(
                        db_column="idEstado",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Calificación",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
            ],
            options={
                "db_table": "estados",
            },
        ),
        migrations.CreateModel(
            name="Estadosequipo",
            fields=[
                (
                    "idestado",
                    models.AutoField(
                        db_column="idEstado", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=50),
                ),
            ],
            options={
                "db_table": "estadosequipo",
            },
        ),
        migrations.CreateModel(
            name="Excepcion",
            fields=[
                (
                    "idexcepcion",
                    models.IntegerField(
                        db_column="idExcepcion", primary_key=True, serialize=False
                    ),
                ),
                ("replicado", models.IntegerField(blank=True, null=True)),
                ("modificado", models.IntegerField()),
                (
                    "fechahoramodificacion",
                    models.DateField(
                        blank=True, db_column="fechaHoraModificacion", null=True
                    ),
                ),
                (
                    "historialmodificacion",
                    models.TextField(
                        blank=True, db_column="historialModificacion", null=True
                    ),
                ),
                ("dominio", models.CharField(max_length=10)),
                (
                    "marcavehiculo",
                    models.CharField(db_column="marcaVehiculo", max_length=255),
                ),
                (
                    "modelovehiculo",
                    models.CharField(db_column="modeloVehiculo", max_length=255),
                ),
                (
                    "idlocalidadvehiculo",
                    models.IntegerField(db_column="idLocalidadVehiculo"),
                ),
                (
                    "nombretitular",
                    models.CharField(db_column="nombreTitular", max_length=255),
                ),
                (
                    "apellidotitular",
                    models.CharField(db_column="apellidoTitular", max_length=255),
                ),
                (
                    "domiciliotitular",
                    models.CharField(db_column="domicilioTitular", max_length=255),
                ),
                (
                    "idlocalidadtitular",
                    models.IntegerField(db_column="idLocalidadTitular"),
                ),
                (
                    "nombreconductor",
                    models.CharField(db_column="nombreConductor", max_length=255),
                ),
                (
                    "apellidoconductor",
                    models.CharField(db_column="apellidoConductor", max_length=255),
                ),
                (
                    "domicilioconductor",
                    models.CharField(db_column="domicilioConductor", max_length=255),
                ),
                (
                    "idlocalidadconductor",
                    models.IntegerField(db_column="idLocalidadConductor"),
                ),
                ("fecha", models.DateField()),
                ("observacion", models.TextField()),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("activo", models.IntegerField()),
                ("usuario", models.CharField(max_length=50)),
                (
                    "usuariodictamen",
                    models.CharField(db_column="usuarioDictamen", max_length=50),
                ),
                ("aprobado", models.IntegerField(blank=True, null=True)),
                (
                    "fechahoradictamen",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraDictamen", null=True
                    ),
                ),
                (
                    "observaciondictamen",
                    models.TextField(db_column="observacionDictamen"),
                ),
                ("idcategoria", models.IntegerField(db_column="idCategoria")),
                ("chasisnro", models.CharField(db_column="chasisNro", max_length=50)),
                ("motoranio", models.IntegerField(db_column="motorAnio")),
                ("motormarca", models.CharField(db_column="motorMarca", max_length=50)),
                (
                    "motornumero",
                    models.CharField(db_column="motorNumero", max_length=50),
                ),
                (
                    "tipodocconductor",
                    models.CharField(db_column="tipoDocConductor", max_length=10),
                ),
                ("nrodocconductor", models.IntegerField(db_column="nroDocConductor")),
                (
                    "codigotitular",
                    models.CharField(db_column="codigoTitular", max_length=12),
                ),
                (
                    "companiaseguro",
                    models.CharField(
                        blank=True, db_column="companiaSeguro", max_length=50, null=True
                    ),
                ),
                (
                    "nropoliza",
                    models.CharField(
                        blank=True, db_column="nroPoliza", max_length=50, null=True
                    ),
                ),
                (
                    "ultimorecpatente",
                    models.CharField(
                        blank=True,
                        db_column="ultimoRecPatente",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("idtipouso", models.IntegerField(db_column="idTipoUso")),
                (
                    "idtipovehiculo",
                    models.IntegerField(
                        blank=True, db_column="idTipoVehiculo", null=True
                    ),
                ),
                (
                    "vanio",
                    models.IntegerField(blank=True, db_column="vAnio", null=True),
                ),
                (
                    "chasismarca",
                    models.CharField(
                        blank=True, db_column="chasisMarca", max_length=100, null=True
                    ),
                ),
                (
                    "chasisanio",
                    models.IntegerField(blank=True, db_column="chasisAnio", null=True),
                ),
                (
                    "tipocombustible",
                    models.CharField(
                        blank=True,
                        db_column="tipoCombustible",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "nroejes",
                    models.IntegerField(blank=True, db_column="nroEjes", null=True),
                ),
                (
                    "tipodoctitular",
                    models.CharField(db_column="tipoDocTitular", max_length=10),
                ),
                ("nrodoctitular", models.IntegerField(db_column="nroDocTitular")),
                (
                    "telefonotitular",
                    models.CharField(db_column="telefonoTitular", max_length=20),
                ),
                (
                    "tipopersona",
                    models.CharField(db_column="tipoPersona", max_length=1),
                ),
                (
                    "razonsocialtitular",
                    models.CharField(
                        blank=True,
                        db_column="razonSocialTitular",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "cuittitular",
                    models.CharField(
                        blank=True, db_column="cuitTitular", max_length=15, null=True
                    ),
                ),
                (
                    "codigopjtitular",
                    models.CharField(
                        blank=True,
                        db_column="codigoPJTitular",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "emailtitular",
                    models.CharField(
                        blank=True, db_column="emailTitular", max_length=50, null=True
                    ),
                ),
                ("notifyactive", models.IntegerField(db_column="notifyActive")),
            ],
            options={
                "db_table": "excepcion",
            },
        ),
        migrations.CreateModel(
            name="Fotovalidacionpatente",
            fields=[
                (
                    "idfotovalidacion",
                    models.IntegerField(
                        db_column="idFotovalidacion", primary_key=True, serialize=False
                    ),
                ),
                ("dominio", models.CharField(max_length=10)),
                ("fechahora", models.DateTimeField(db_column="fechaHora")),
                ("codigo", models.IntegerField(blank=True, null=True)),
                ("resultado", models.CharField(max_length=200)),
                ("path", models.CharField(max_length=100)),
                ("output", models.CharField(blank=True, max_length=1024, null=True)),
                ("activo", models.IntegerField()),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "fotovalidacionPatente",
            },
        ),
        migrations.CreateModel(
            name="Habilitacion",
            fields=[
                (
                    "idhabilitacion",
                    models.AutoField(
                        db_column="idHabilitacion", primary_key=True, serialize=False
                    ),
                ),
                (
                    "nrocodigobarrashab",
                    models.CharField(db_column="nroCodigoBarrasHab", max_length=255),
                ),
                ("activo", models.IntegerField()),
                (
                    "fechahoracreacion",
                    models.DateTimeField(db_column="fechaHoraCreacion"),
                ),
                ("modificado", models.IntegerField()),
                (
                    "fechahoraultmodificacion",
                    models.DateTimeField(db_column="fechaHoraUltModificacion"),
                ),
                (
                    "historialmodificacion",
                    models.TextField(db_column="historialModificacion"),
                ),
                ("dominio", models.CharField(max_length=10)),
                (
                    "marcavehiculo",
                    models.CharField(db_column="marcaVehiculo", max_length=255),
                ),
                (
                    "modelovehiculo",
                    models.CharField(db_column="modeloVehiculo", max_length=255),
                ),
                (
                    "idlocalidadvehiculo",
                    models.IntegerField(db_column="idLocalidadVehiculo"),
                ),
                (
                    "nombretitular",
                    models.CharField(db_column="nombreTitular", max_length=255),
                ),
                (
                    "apellidotitular",
                    models.CharField(db_column="apellidoTitular", max_length=255),
                ),
                (
                    "domiciliotitular",
                    models.CharField(db_column="domicilioTitular", max_length=255),
                ),
                (
                    "idlocalidadtitular",
                    models.IntegerField(db_column="idLocalidadTitular"),
                ),
                (
                    "nombreconductor",
                    models.CharField(db_column="nombreConductor", max_length=255),
                ),
                (
                    "apellidoconductor",
                    models.CharField(db_column="apellidoConductor", max_length=255),
                ),
                (
                    "domicilioconductor",
                    models.CharField(db_column="domicilioConductor", max_length=255),
                ),
                (
                    "idlocalidadconductor",
                    models.IntegerField(db_column="idLocalidadConductor"),
                ),
                (
                    "usuariodictamen",
                    models.CharField(db_column="usuarioDictamen", max_length=50),
                ),
                (
                    "fechahoradictamen",
                    models.DateTimeField(db_column="fechaHoraDictamen"),
                ),
                (
                    "tipodoctitular",
                    models.CharField(db_column="tipoDocTitular", max_length=10),
                ),
                ("nrodoctitular", models.IntegerField(db_column="nroDocTitular")),
                (
                    "tipopersona",
                    models.CharField(db_column="tipoPersona", max_length=1),
                ),
                (
                    "razonsocialtitular",
                    models.CharField(
                        blank=True,
                        db_column="razonSocialTitular",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "cuittitular",
                    models.CharField(
                        blank=True, db_column="cuitTitular", max_length=15, null=True
                    ),
                ),
                ("idtiposervicio", models.IntegerField(db_column="idTipoServicio")),
                (
                    "nrocertificadocccf",
                    models.CharField(
                        blank=True,
                        db_column="NroCertificadoCCCF",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "habilitacion",
            },
        ),
        migrations.CreateModel(
            name="Habsfinales",
            fields=[
                (
                    "idhabf",
                    models.AutoField(
                        db_column="idHabF", primary_key=True, serialize=False
                    ),
                ),
                ("fh", models.DateTimeField(blank=True, db_column="FH", null=True)),
                (
                    "dominiorto",
                    models.CharField(
                        blank=True, db_column="DominioRTO", max_length=50, null=True
                    ),
                ),
                (
                    "numpedido",
                    models.CharField(
                        blank=True, db_column="NumPedido", max_length=50, null=True
                    ),
                ),
                ("dominio", models.CharField(blank=True, max_length=50, null=True)),
                ("interno", models.CharField(blank=True, max_length=50, null=True)),
                ("anio", models.CharField(blank=True, max_length=50, null=True)),
                ("capacidad", models.CharField(blank=True, max_length=50, null=True)),
                ("numhabil", models.CharField(blank=True, max_length=50, null=True)),
                ("hab_fechaven", models.DateField(blank=True, null=True)),
                ("seg_fechaven", models.DateField(blank=True, null=True)),
                ("revfechaven", models.DateField(blank=True, null=True)),
                ("hab_fechaini", models.DateField(blank=True, null=True)),
                ("modalidad", models.CharField(blank=True, max_length=256, null=True)),
                ("fechahoy", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "habsfinales",
            },
        ),
        migrations.CreateModel(
            name="Inspectores",
            fields=[
                (
                    "idinspector",
                    models.IntegerField(
                        db_column="idInspector", primary_key=True, serialize=False
                    ),
                ),
                ("apellido", models.CharField(db_column="Apellido", max_length=50)),
                ("nombre", models.CharField(db_column="Nombre", max_length=50)),
                ("matricula", models.CharField(db_column="Matricula", max_length=50)),
                (
                    "curriculum",
                    models.CharField(db_column="Curriculum", max_length=200),
                ),
                ("fechadesde", models.DateField(db_column="FechaDesde")),
                (
                    "fechahasta",
                    models.DateField(blank=True, db_column="FechaHasta", null=True),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("cuit", models.CharField(db_column="Cuit", max_length=15)),
                ("usuario", models.CharField(db_column="Usuario", max_length=50)),
                (
                    "claveinicial",
                    models.CharField(db_column="ClaveInicial", max_length=100),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                ("replicado", models.IntegerField(db_column="Replicado")),
            ],
            options={
                "db_table": "inspectores",
            },
        ),
        migrations.CreateModel(
            name="Inspectoresusuarios",
            fields=[
                (
                    "idtaller",
                    models.IntegerField(
                        db_column="idTaller", primary_key=True, serialize=False
                    ),
                ),
                ("idusuario", models.IntegerField(db_column="idUsuario")),
                ("idinspector", models.IntegerField(db_column="idInspector")),
            ],
            options={
                "db_table": "inspectoresusuarios",
            },
        ),
        migrations.CreateModel(
            name="Instalaciones",
            fields=[
                (
                    "idinstalacion",
                    models.AutoField(
                        db_column="idInstalacion", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=200),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("replicado", models.IntegerField(db_column="Replicado")),
            ],
            options={
                "db_table": "instalaciones",
            },
        ),
        migrations.CreateModel(
            name="Lineasequipos",
            fields=[
                (
                    "idequipo",
                    models.IntegerField(
                        db_column="idEquipo", primary_key=True, serialize=False
                    ),
                ),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("nrolinea", models.IntegerField(db_column="NroLinea")),
                ("fechadesde", models.DateField(db_column="FechaDesde")),
                (
                    "fechahasta",
                    models.DateField(blank=True, db_column="FechaHasta", null=True),
                ),
                (
                    "observaciones",
                    models.TextField(blank=True, db_column="Observaciones", null=True),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "lineasequipos",
            },
        ),
        migrations.CreateModel(
            name="Lineastaller",
            fields=[
                (
                    "nrolinea",
                    models.IntegerField(
                        db_column="NroLinea", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
                ("replicado", models.IntegerField(db_column="Replicado")),
            ],
            options={
                "db_table": "lineastaller",
            },
        ),
        migrations.CreateModel(
            name="Localidades",
            fields=[
                (
                    "idlocalidad",
                    models.AutoField(
                        db_column="idLocalidad", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
            ],
            options={
                "db_table": "localidades",
            },
        ),
        migrations.CreateModel(
            name="Mantenimientos",
            fields=[
                (
                    "idmantenimiento",
                    models.IntegerField(
                        db_column="idMantenimiento", primary_key=True, serialize=False
                    ),
                ),
                ("fecha", models.DateField(db_column="Fecha")),
                ("observaciones", models.TextField(db_column="Observaciones")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "mantenimientos",
            },
        ),
        migrations.CreateModel(
            name="Marcasautos",
            fields=[
                (
                    "idmarca",
                    models.AutoField(
                        db_column="idMarca", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
            ],
            options={
                "db_table": "marcasautos",
            },
        ),
        migrations.CreateModel(
            name="Nivelesdefectos",
            fields=[
                (
                    "idnivel",
                    models.IntegerField(
                        db_column="idNivel", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=10),
                ),
            ],
            options={
                "db_table": "nivelesdefectos",
            },
        ),
        migrations.CreateModel(
            name="Noconformidades",
            fields=[
                (
                    "idnc",
                    models.IntegerField(
                        db_column="idNC", primary_key=True, serialize=False
                    ),
                ),
                ("dominio", models.CharField(max_length=10)),
                (
                    "descripcionnc",
                    models.CharField(db_column="descripcionNC", max_length=200),
                ),
                ("fechahora", models.DateTimeField(db_column="fechaHora")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("activo", models.IntegerField()),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "noConformidades",
            },
        ),
        migrations.CreateModel(
            name="Parametros",
            fields=[
                ("idparametro", models.AutoField(primary_key=True, serialize=False)),
                (
                    "descripcion",
                    models.CharField(db_collation="utf8mb3_general_ci", max_length=200),
                ),
                (
                    "valor",
                    models.CharField(db_collation="utf8mb3_general_ci", max_length=200),
                ),
                ("observaciones", models.TextField(db_collation="utf8mb3_general_ci")),
            ],
            options={
                "db_table": "parametros",
            },
        ),
        migrations.CreateModel(
            name="Pendientes",
            fields=[
                (
                    "idpendiente",
                    models.IntegerField(
                        db_column="idPendiente", primary_key=True, serialize=False
                    ),
                ),
                ("fecha", models.DateField(db_column="Fecha")),
                ("hora", models.TimeField(db_column="Hora")),
                ("horafinal", models.TimeField(db_column="HoraFinal")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                (
                    "idfotovalidacion",
                    models.IntegerField(
                        blank=True, db_column="idFotovalidacion", null=True
                    ),
                ),
                (
                    "idverificacion",
                    models.IntegerField(
                        blank=True, db_column="idVerificacion", null=True
                    ),
                ),
                (
                    "dominiovehiculo",
                    models.CharField(db_column="DominioVehiculo", max_length=10),
                ),
                (
                    "idhabilitacion",
                    models.IntegerField(
                        blank=True, db_column="idHabilitacion", null=True
                    ),
                ),
                (
                    "codigohabilitacion",
                    models.CharField(
                        blank=True,
                        db_column="codigoHabilitacion",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("chasisnro", models.CharField(db_column="ChasisNro", max_length=50)),
                ("motoranio", models.IntegerField(db_column="MotorAnio")),
                ("motormarca", models.CharField(db_column="MotorMarca", max_length=50)),
                (
                    "motornumero",
                    models.CharField(db_column="MotorNumero", max_length=50),
                ),
                (
                    "idlocalidadvehiculo",
                    models.IntegerField(db_column="idLocalidadVehiculo"),
                ),
                (
                    "tipodocconductor",
                    models.CharField(db_column="TipoDocConductor", max_length=10),
                ),
                ("nrodocconductor", models.IntegerField(db_column="NroDocConductor")),
                (
                    "nombreconductor",
                    models.CharField(db_column="NombreConductor", max_length=50),
                ),
                (
                    "apellidoconductor",
                    models.CharField(db_column="ApellidoConductor", max_length=50),
                ),
                (
                    "reverificacion",
                    models.IntegerField(
                        blank=True, db_column="Reverificacion", null=True
                    ),
                ),
                (
                    "idverificacionoriginal",
                    models.IntegerField(
                        blank=True, db_column="idVerificacionOriginal", null=True
                    ),
                ),
                (
                    "inspector",
                    models.CharField(
                        blank=True, db_column="Inspector", max_length=100, null=True
                    ),
                ),
                (
                    "directortecnico",
                    models.CharField(
                        blank=True,
                        db_column="DirectorTecnico",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("idestado", models.IntegerField(db_column="idEstado")),
                (
                    "eje1_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "alineacion",
                    models.CharField(
                        blank=True, db_column="Alineacion", max_length=50, null=True
                    ),
                ),
                (
                    "nivelsonoro",
                    models.CharField(
                        blank=True, db_column="NivelSonoro", max_length=50, null=True
                    ),
                ),
                (
                    "interior",
                    models.IntegerField(blank=True, db_column="Interior", null=True),
                ),
                (
                    "escape",
                    models.IntegerField(blank=True, db_column="Escape", null=True),
                ),
                (
                    "bach",
                    models.DecimalField(
                        blank=True,
                        db_column="Bach",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "porcentajeco",
                    models.DecimalField(
                        blank=True,
                        db_column="PorcentajeCo",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "opac",
                    models.DecimalField(
                        blank=True,
                        db_column="Opac",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "ppmhc",
                    models.DecimalField(
                        blank=True,
                        db_column="ppmHC",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_fzaisq",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_FzaIsq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cccf",
                    models.CharField(
                        blank=True, db_column="CCCF", max_length=50, null=True
                    ),
                ),
                (
                    "marcatac",
                    models.CharField(
                        blank=True, db_column="MarcaTac", max_length=50, null=True
                    ),
                ),
                (
                    "nrotac",
                    models.CharField(
                        blank=True, db_column="NroTac", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje1",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje1", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje2",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje2", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje3",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje3", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje4",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje4", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje5",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje5", max_length=50, null=True
                    ),
                ),
                (
                    "nrointerno",
                    models.CharField(
                        blank=True, db_column="NroInterno", max_length=50, null=True
                    ),
                ),
                (
                    "codigotitular",
                    models.CharField(db_column="CodigoTitular", max_length=12),
                ),
                (
                    "descripciontitular",
                    models.CharField(db_column="DescripcionTitular", max_length=150),
                ),
                (
                    "susp_fzaisq",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_FzaIsq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "susp_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "susp_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "susp_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("observaciones", models.TextField(db_column="Observaciones")),
                (
                    "companiaseguro",
                    models.CharField(
                        blank=True, db_column="CompaniaSeguro", max_length=50, null=True
                    ),
                ),
                (
                    "nropoliza",
                    models.CharField(
                        blank=True, db_column="NroPoliza", max_length=50, null=True
                    ),
                ),
                (
                    "ultimorecpatente",
                    models.CharField(
                        blank=True,
                        db_column="UltimoRecPatente",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("idtipouso", models.IntegerField(db_column="idTipoUso")),
                (
                    "usuariocarga",
                    models.CharField(
                        blank=True, db_column="usuarioCarga", max_length=50, null=True
                    ),
                ),
                (
                    "idtipovehiculo",
                    models.IntegerField(
                        blank=True, db_column="idTipoVehiculo", null=True
                    ),
                ),
                (
                    "vmarca",
                    models.CharField(
                        blank=True, db_column="VMarca", max_length=100, null=True
                    ),
                ),
                (
                    "vmodelo",
                    models.CharField(
                        blank=True, db_column="VModelo", max_length=100, null=True
                    ),
                ),
                (
                    "vanio",
                    models.IntegerField(blank=True, db_column="VAnio", null=True),
                ),
                (
                    "chasismarca",
                    models.CharField(
                        blank=True, db_column="ChasisMarca", max_length=100, null=True
                    ),
                ),
                (
                    "chasisanio",
                    models.IntegerField(blank=True, db_column="ChasisAnio", null=True),
                ),
                (
                    "tipocombustible",
                    models.CharField(
                        blank=True,
                        db_column="TipoCombustible",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "vpotencia",
                    models.CharField(
                        blank=True, db_column="VPotencia", max_length=20, null=True
                    ),
                ),
                (
                    "nroejes",
                    models.IntegerField(blank=True, db_column="NroEjes", null=True),
                ),
                (
                    "vcaja",
                    models.CharField(
                        blank=True, db_column="VCaja", max_length=50, null=True
                    ),
                ),
                (
                    "pocisionmotor",
                    models.CharField(
                        blank=True, db_column="PocisionMotor", max_length=50, null=True
                    ),
                ),
                ("aniofabricacion", models.IntegerField(db_column="AnioFabricacion")),
                (
                    "carroceria",
                    models.CharField(
                        blank=True, db_column="Carroceria", max_length=50, null=True
                    ),
                ),
                (
                    "expediente",
                    models.CharField(
                        blank=True, db_column="Expediente", max_length=50, null=True
                    ),
                ),
                (
                    "aireaco",
                    models.IntegerField(blank=True, db_column="AireAco", null=True),
                ),
                ("bar", models.IntegerField(blank=True, db_column="Bar", null=True)),
                (
                    "banio",
                    models.IntegerField(blank=True, db_column="Banio", null=True),
                ),
                (
                    "calefaccion",
                    models.IntegerField(blank=True, db_column="Calefaccion", null=True),
                ),
                (
                    "suspension",
                    models.CharField(
                        blank=True, db_column="Suspension", max_length=50, null=True
                    ),
                ),
                (
                    "tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "pesomax",
                    models.DecimalField(
                        blank=True,
                        db_column="PesoMax",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cargautil",
                    models.DecimalField(
                        blank=True,
                        db_column="CargaUtil",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "asientos",
                    models.IntegerField(blank=True, db_column="Asientos", null=True),
                ),
                (
                    "idloctmserv",
                    models.IntegerField(blank=True, db_column="idLocTMServ", null=True),
                ),
                (
                    "tiposervtm",
                    models.CharField(
                        blank=True, db_column="TipoServTM", max_length=100, null=True
                    ),
                ),
                (
                    "idtiposervicio",
                    models.IntegerField(
                        blank=True, db_column="idTipoServicio", null=True
                    ),
                ),
                (
                    "idclaseservicio",
                    models.IntegerField(
                        blank=True, db_column="idClaseServicio", null=True
                    ),
                ),
                (
                    "prestadorserv",
                    models.CharField(
                        blank=True, db_column="prestadorServ", max_length=100, null=True
                    ),
                ),
                (
                    "cuitprestserv",
                    models.CharField(
                        blank=True, db_column="CuitPrestServ", max_length=15, null=True
                    ),
                ),
                (
                    "ptipodoc",
                    models.CharField(
                        blank=True, db_column="PTipoDoc", max_length=10, null=True
                    ),
                ),
                (
                    "pnrodoc",
                    models.IntegerField(blank=True, db_column="PNroDoc", null=True),
                ),
                (
                    "pcuit",
                    models.CharField(
                        blank=True, db_column="PCuit", max_length=15, null=True
                    ),
                ),
                (
                    "pdomicilio",
                    models.CharField(
                        blank=True, db_column="PDomicilio", max_length=200, null=True
                    ),
                ),
                (
                    "ptelefono",
                    models.CharField(
                        blank=True, db_column="PTelefono", max_length=50, null=True
                    ),
                ),
                (
                    "pemail",
                    models.CharField(
                        blank=True, db_column="PEmail", max_length=200, null=True
                    ),
                ),
                (
                    "pidlocalidad",
                    models.IntegerField(
                        blank=True, db_column="PidLocalidad", null=True
                    ),
                ),
                (
                    "ptipopersona",
                    models.CharField(
                        blank=True, db_column="PTipoPersona", max_length=1, null=True
                    ),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                (
                    "tipocarga",
                    models.CharField(
                        blank=True, db_column="TipoCarga", max_length=50, null=True
                    ),
                ),
                (
                    "pcodigopj",
                    models.CharField(
                        blank=True, db_column="PCodigoPJ", max_length=30, null=True
                    ),
                ),
                (
                    "certificadodiscapacidad",
                    models.CharField(
                        blank=True,
                        db_column="CertificadoDiscapacidad",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "nrofactura",
                    models.CharField(
                        blank=True, db_column="nroFactura", max_length=100, null=True
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "db_table": "pendientes",
            },
        ),
        migrations.CreateModel(
            name="Pendientesservicios",
            fields=[
                (
                    "idpendienteservicios",
                    models.IntegerField(
                        db_column="idPendienteServicios",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraRep", null=True
                    ),
                ),
                ("activo", models.IntegerField()),
            ],
            options={
                "db_table": "pendientesservicios",
            },
        ),
        migrations.CreateModel(
            name="Perfiles",
            fields=[
                (
                    "idperfil",
                    models.AutoField(
                        db_column="idPerfil", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=50),
                ),
            ],
            options={
                "db_table": "perfiles",
            },
        ),
        migrations.CreateModel(
            name="Personas",
            fields=[
                (
                    "tipodoc",
                    models.CharField(
                        blank=True, db_column="TipoDoc", max_length=10, null=True
                    ),
                ),
                (
                    "nrodoc",
                    models.IntegerField(blank=True, db_column="NroDoc", null=True),
                ),
                (
                    "cuit",
                    models.CharField(
                        blank=True, db_column="Cuit", max_length=15, null=True
                    ),
                ),
                (
                    "apellido",
                    models.CharField(
                        blank=True, db_column="Apellido", max_length=70, null=True
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        blank=True, db_column="Nombre", max_length=70, null=True
                    ),
                ),
                (
                    "domicilio",
                    models.CharField(
                        blank=True, db_column="Domicilio", max_length=200, null=True
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, db_column="Telefono", max_length=50, null=True
                    ),
                ),
                (
                    "razonsocial",
                    models.CharField(
                        blank=True, db_column="RazonSocial", max_length=200, null=True
                    ),
                ),
                (
                    "tipopersona",
                    models.CharField(db_column="TipoPersona", max_length=1),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=200, null=True
                    ),
                ),
                (
                    "idlocalidad",
                    models.IntegerField(blank=True, db_column="idLocalidad", null=True),
                ),
                (
                    "codigotitular",
                    models.CharField(
                        db_column="CodigoTitular",
                        max_length=12,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fechahoraserv",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraServ", null=True
                    ),
                ),
                (
                    "codigopj",
                    models.CharField(
                        blank=True, db_column="CodigoPJ", max_length=30, null=True
                    ),
                ),
            ],
            options={
                "db_table": "personas",
            },
        ),
        migrations.CreateModel(
            name="Prorroga",
            fields=[
                (
                    "idprorroga",
                    models.IntegerField(
                        db_column="idProrroga", primary_key=True, serialize=False
                    ),
                ),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                (
                    "numerocertificado",
                    models.CharField(db_column="numeroCertificado", max_length=255),
                ),
                ("replicado", models.IntegerField(blank=True, null=True)),
                ("modificado", models.IntegerField()),
                (
                    "fechahoramodificacion",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraModificacion", null=True
                    ),
                ),
                (
                    "historialmodificacion",
                    models.TextField(
                        blank=True, db_column="historialModificacion", null=True
                    ),
                ),
                ("dominio", models.CharField(max_length=10)),
                (
                    "fechahoracreacion",
                    models.DateTimeField(db_column="fechaHoraCreacion"),
                ),
                (
                    "fundamentacionpeticion",
                    models.TextField(db_column="fundamentacionPeticion"),
                ),
                (
                    "fundamentaciondictamen",
                    models.TextField(
                        blank=True, db_column="fundamentacionDictamen", null=True
                    ),
                ),
                ("activo", models.IntegerField()),
                (
                    "usuariopeticion",
                    models.CharField(db_column="usuarioPeticion", max_length=50),
                ),
                (
                    "usuariodictamen",
                    models.CharField(db_column="usuarioDictamen", max_length=50),
                ),
                ("aprobado", models.IntegerField(blank=True, null=True)),
                (
                    "fechahoradictamen",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraDictamen", null=True
                    ),
                ),
                ("notifyactive", models.IntegerField(db_column="notifyActive")),
            ],
            options={
                "db_table": "prorroga",
            },
        ),
        migrations.CreateModel(
            name="Provincias",
            fields=[
                (
                    "idprovincia",
                    models.AutoField(
                        db_column="idProvincia", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
                (
                    "abreviatura",
                    models.CharField(
                        blank=True, db_column="Abreviatura", max_length=15, null=True
                    ),
                ),
            ],
            options={
                "db_table": "provincias",
            },
        ),
        migrations.CreateModel(
            name="Replicacionlogs",
            fields=[
                (
                    "idreplicacion",
                    models.AutoField(
                        db_column="idReplicacion", primary_key=True, serialize=False
                    ),
                ),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("usuario", models.CharField(db_column="Usuario", max_length=50)),
                ("fechahora", models.DateTimeField(db_column="FechaHora")),
                ("observaciones", models.TextField(db_column="Observaciones")),
                ("exito", models.IntegerField(db_column="Exito")),
            ],
            options={
                "db_table": "replicacionlogs",
            },
        ),
        migrations.CreateModel(
            name="RepTablasparametricas",
            fields=[
                (
                    "idreplicacion",
                    models.AutoField(
                        db_column="idReplicacion", primary_key=True, serialize=False
                    ),
                ),
                ("texto", models.TextField(db_column="Texto")),
                ("fechacarga", models.DateTimeField(db_column="FechaCarga")),
                ("usuario", models.CharField(db_column="Usuario", max_length=50)),
            ],
            options={
                "db_table": "rep_tablasparametricas",
            },
        ),
        migrations.CreateModel(
            name="Rubrosdefectos",
            fields=[
                (
                    "idrubro",
                    models.AutoField(
                        db_column="idRubro", primary_key=True, serialize=False
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        db_collation="utf8mb3_general_ci",
                        db_column="Codigo",
                        max_length=10,
                        unique=True,
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        db_collation="utf8mb3_general_ci",
                        db_column="Descripcion",
                        max_length=200,
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
            ],
            options={
                "db_table": "rubrosdefectos",
            },
        ),
        migrations.CreateModel(
            name="Serviciohab",
            fields=[
                (
                    "idserviciohab",
                    models.AutoField(
                        db_column="idServicioHab", primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                "db_table": "serviciohab",
            },
        ),
        migrations.CreateModel(
            name="Serviciostransporte",
            fields=[
                (
                    "idtiposervicio",
                    models.AutoField(
                        db_column="idTipoServicio", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=200),
                ),
                (
                    "descripcionnqn",
                    models.CharField(
                        blank=True,
                        db_column="descripcionNqn",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("habilitado", models.IntegerField(db_column="Habilitado")),
                ("municipal", models.IntegerField(db_column="Municipal")),
            ],
            options={
                "db_table": "serviciostransporte",
            },
        ),
        migrations.CreateModel(
            name="Serviciostransportehab",
            fields=[
                (
                    "idserviciostransportehab",
                    models.IntegerField(
                        db_column="idServiciosTransporteHab",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("descripcion", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "serviciostransportehab",
            },
        ),
        migrations.CreateModel(
            name="Talleres",
            fields=[
                (
                    "idtaller",
                    models.AutoField(
                        db_column="idTaller",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Taller",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        db_collation="utf8mb3_general_ci",
                        db_column="Nombre",
                        max_length=100,
                    ),
                ),
                ("nrotaller", models.IntegerField(db_column="Nrotaller")),
                (
                    "direccion",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb3_general_ci",
                        db_column="Direccion",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        db_collation="utf8mb3_general_ci",
                        db_column="Telefono",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                ("cuit", models.CharField(db_column="Cuit", max_length=11)),
                (
                    "licenciacomercial",
                    models.CharField(db_column="LicenciaComercial", max_length=20),
                ),
                (
                    "apellidoad",
                    models.CharField(
                        blank=True, db_column="ApellidoAd", max_length=50, null=True
                    ),
                ),
                (
                    "dniresponsablead",
                    models.CharField(
                        blank=True,
                        db_column="DNIResponsableAd",
                        max_length=8,
                        null=True,
                    ),
                ),
                ("nombread", models.CharField(db_column="NombreAd", max_length=50)),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("codigorechazado", models.IntegerField(db_column="CodigoRechazado")),
                ("adjobligatorio", models.IntegerField(db_column="AdjObligatorio")),
            ],
            options={
                "db_table": "talleres",
            },
        ),
        migrations.CreateModel(
            name="Tipousovehiculo",
            fields=[
                (
                    "idtipouso",
                    models.AutoField(
                        db_column="idTipoUso",
                        primary_key=True,
                        serialize=False,
                        verbose_name="Tipo Uso",
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=50),
                ),
                (
                    "mesesvigencia",
                    models.IntegerField(
                        blank=True, db_column="MesesVigencia", null=True
                    ),
                ),
                ("codigooblea", models.IntegerField(db_column="CodigoOblea")),
            ],
            options={
                "db_table": "tipousovehiculo",
            },
        ),
        migrations.CreateModel(
            name="Usuarios",
            fields=[
                (
                    "idusuario",
                    models.AutoField(
                        db_column="idUsuario", primary_key=True, serialize=False
                    ),
                ),
                (
                    "usuario",
                    models.CharField(db_column="Usuario", max_length=50, unique=True),
                ),
                ("password", models.CharField(db_column="Password", max_length=150)),
                ("activo", models.IntegerField(db_column="Activo")),
                (
                    "apellido",
                    models.CharField(
                        blank=True, db_column="Apellido", max_length=50, null=True
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        blank=True, db_column="Nombre", max_length=50, null=True
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=100, null=True
                    ),
                ),
                (
                    "idperfil",
                    models.ForeignKey(
                        db_column="idPerfil",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.perfiles",
                    ),
                ),
            ],
            options={
                "db_table": "usuarios",
            },
        ),
        migrations.CreateModel(
            name="Valoresadm",
            fields=[
                (
                    "idvaladm",
                    models.AutoField(
                        db_column="idValAdm", primary_key=True, serialize=False
                    ),
                ),
                ("descripcion", models.CharField(max_length=100)),
                ("valor", models.FloatField()),
            ],
            options={
                "db_table": "valoresAdm",
            },
        ),
        migrations.CreateModel(
            name="Vehiculos",
            fields=[
                (
                    "dominio",
                    models.CharField(
                        db_column="Dominio",
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Dominio",
                    ),
                ),
                ("idtipovehiculo", models.IntegerField(db_column="idTipoVehiculo")),
                ("marca", models.CharField(db_column="Marca", max_length=100)),
                ("modelo", models.CharField(db_column="Modelo", max_length=100)),
                ("anio", models.IntegerField(db_column="Anio")),
                ("idlocalidad", models.IntegerField(db_column="idLocalidad")),
                (
                    "motormarca",
                    models.CharField(
                        blank=True, db_column="MotorMarca", max_length=100, null=True
                    ),
                ),
                (
                    "motornro",
                    models.CharField(
                        blank=True, db_column="MotorNro", max_length=50, null=True
                    ),
                ),
                (
                    "motoranio",
                    models.IntegerField(blank=True, db_column="MotorAnio", null=True),
                ),
                (
                    "chasismarca",
                    models.CharField(
                        blank=True, db_column="ChasisMarca", max_length=100, null=True
                    ),
                ),
                (
                    "chasisnro",
                    models.CharField(
                        blank=True, db_column="ChasisNro", max_length=50, null=True
                    ),
                ),
                (
                    "chasisanio",
                    models.IntegerField(blank=True, db_column="ChasisAnio", null=True),
                ),
                (
                    "tacografomarca",
                    models.CharField(
                        blank=True,
                        db_column="TacografoMarca",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "tacografonro",
                    models.CharField(
                        blank=True, db_column="TacografoNro", max_length=50, null=True
                    ),
                ),
                (
                    "tacograforodado_eje1",
                    models.CharField(
                        blank=True,
                        db_column="TacografoRodado_Eje1",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "tacograforodado_eje2",
                    models.CharField(
                        blank=True,
                        db_column="TacografoRodado_Eje2",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "tacograforodado_eje3",
                    models.CharField(
                        blank=True,
                        db_column="TacografoRodado_Eje3",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "tacograforodado_eje4",
                    models.CharField(
                        blank=True,
                        db_column="TacografoRodado_Eje4",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "tacograforodado_eje5",
                    models.CharField(
                        blank=True,
                        db_column="TacografoRodado_Eje5",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "cccf",
                    models.CharField(
                        blank=True, db_column="CCCF", max_length=50, null=True
                    ),
                ),
                (
                    "tipocombustible",
                    models.CharField(
                        blank=True,
                        db_column="TipoCombustible",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "pot",
                    models.CharField(
                        blank=True, db_column="Pot", max_length=20, null=True
                    ),
                ),
                (
                    "nroejes",
                    models.IntegerField(blank=True, db_column="NroEjes", null=True),
                ),
                (
                    "caja",
                    models.CharField(
                        blank=True, db_column="Caja", max_length=50, null=True
                    ),
                ),
                (
                    "pocisionmotor",
                    models.CharField(
                        blank=True, db_column="PocisionMotor", max_length=50, null=True
                    ),
                ),
                ("aniofabricacion", models.IntegerField(db_column="AnioFabricacion")),
                (
                    "carroceria",
                    models.CharField(
                        blank=True, db_column="Carroceria", max_length=50, null=True
                    ),
                ),
                (
                    "expediente",
                    models.CharField(
                        blank=True, db_column="Expediente", max_length=50, null=True
                    ),
                ),
                (
                    "aireaco",
                    models.IntegerField(blank=True, db_column="AireAco", null=True),
                ),
                ("bar", models.IntegerField(blank=True, db_column="Bar", null=True)),
                (
                    "banio",
                    models.IntegerField(blank=True, db_column="Banio", null=True),
                ),
                (
                    "calefaccion",
                    models.IntegerField(blank=True, db_column="Calefaccion", null=True),
                ),
                (
                    "suspencion",
                    models.CharField(
                        blank=True, db_column="Suspencion", max_length=50, null=True
                    ),
                ),
                (
                    "tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "pesomax",
                    models.DecimalField(
                        blank=True,
                        db_column="PesoMax",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cargautil",
                    models.DecimalField(
                        blank=True,
                        db_column="CargaUtil",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "asientos",
                    models.IntegerField(blank=True, db_column="Asientos", null=True),
                ),
                (
                    "codigotitular",
                    models.CharField(db_column="CodigoTitular", max_length=12),
                ),
                (
                    "tiposervtm",
                    models.CharField(
                        blank=True, db_column="TipoServTM", max_length=100, null=True
                    ),
                ),
                (
                    "tiposservicios",
                    models.CharField(
                        blank=True,
                        db_column="tiposServicios",
                        max_length=400,
                        null=True,
                    ),
                ),
                (
                    "idhabilitacion",
                    models.IntegerField(
                        blank=True, db_column="idHabilitacion", null=True
                    ),
                ),
                (
                    "codigohabilitacion",
                    models.CharField(
                        blank=True,
                        db_column="codigoHabilitacion",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "idclaseservicio",
                    models.IntegerField(
                        blank=True, db_column="idClaseServicio", null=True
                    ),
                ),
                (
                    "prestadorserv",
                    models.CharField(
                        blank=True, db_column="prestadorServ", max_length=100, null=True
                    ),
                ),
                (
                    "cuitprestserv",
                    models.CharField(
                        blank=True, db_column="CuitPrestServ", max_length=15, null=True
                    ),
                ),
                (
                    "nrointerno",
                    models.CharField(
                        blank=True, db_column="NroInterno", max_length=50, null=True
                    ),
                ),
                (
                    "companiaseguro",
                    models.CharField(
                        blank=True,
                        db_column="CompaniaSeguro",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "nropoliza",
                    models.CharField(
                        blank=True, db_column="NroPoliza", max_length=50, null=True
                    ),
                ),
                (
                    "ultimorecpatente",
                    models.CharField(
                        blank=True,
                        db_column="UltimoRecPatente",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("idcategoria", models.IntegerField(db_column="idCategoria")),
                (
                    "fechahoraserv",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraServ", null=True
                    ),
                ),
                (
                    "tipocarga",
                    models.CharField(
                        blank=True, db_column="TipoCarga", max_length=50, null=True
                    ),
                ),
                (
                    "certificadodiscapacidad",
                    models.CharField(
                        blank=True,
                        db_column="CertificadoDiscapacidad",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("patentemercosur", models.IntegerField(db_column="PatenteMercosur")),
                (
                    "tipodocconductor",
                    models.CharField(
                        blank=True,
                        db_column="TipoDocConductor",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "nrodocconductor",
                    models.IntegerField(
                        blank=True, db_column="NroDocConductor", null=True
                    ),
                ),
                (
                    "nombreconductor",
                    models.CharField(
                        blank=True,
                        db_column="NombreConductor",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "apellidoconductor",
                    models.CharField(
                        blank=True,
                        db_column="ApellidoConductor",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "domicilioconductor",
                    models.CharField(
                        blank=True,
                        db_column="DomicilioConductor",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "localidadconductor",
                    models.IntegerField(
                        blank=True, db_column="LocalidadConductor", null=True
                    ),
                ),
                (
                    "fechaactualizacion",
                    models.DateField(
                        blank=True, db_column="FechaActualizacion", null=True
                    ),
                ),
                (
                    "artarjetaverde",
                    models.CharField(
                        blank=True,
                        db_column="arTarjetaVerde",
                        max_length=150,
                        null=True,
                    ),
                ),
                ("esreverificacion", models.IntegerField(db_column="esReverificacion")),
                (
                    "idverificacionoriginal",
                    models.IntegerField(
                        blank=True, db_column="idVerificacionOriginal", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, db_column="Status", max_length=50, null=True
                    ),
                ),
                (
                    "idtallerverif",
                    models.IntegerField(
                        blank=True, db_column="idTallerVerif", null=True
                    ),
                ),
                (
                    "nrofactura",
                    models.CharField(
                        blank=True, db_column="nroFactura", max_length=100, null=True
                    ),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
                (
                    "idloctmserv",
                    models.ForeignKey(
                        blank=True,
                        db_column="idLocTMServ",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.localidades",
                    ),
                ),
                (
                    "idtiposervicio",
                    models.ForeignKey(
                        blank=True,
                        db_column="idTipoServicio",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.serviciostransporte",
                    ),
                ),
                (
                    "idtipouso",
                    models.ForeignKey(
                        db_column="idTipoUso",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.tipousovehiculo",
                    ),
                ),
            ],
            options={
                "db_table": "vehiculos",
            },
        ),
        migrations.CreateModel(
            name="Verificaciones",
            fields=[
                (
                    "idverificacion",
                    models.IntegerField(
                        db_column="idVerificacion", primary_key=True, serialize=False
                    ),
                ),
                ("fecha", models.DateField(db_column="Fecha", verbose_name="Fecha")),
                ("hora", models.TimeField(db_column="Hora")),
                (
                    "horafinal",
                    models.TimeField(blank=True, db_column="HoraFinal", null=True),
                ),
                (
                    "idfotovalidacion",
                    models.IntegerField(
                        blank=True, db_column="idFotovalidacion", null=True
                    ),
                ),
                (
                    "idhabilitacion",
                    models.IntegerField(
                        blank=True, db_column="idHabilitacion", null=True
                    ),
                ),
                (
                    "codigohabilitacion",
                    models.CharField(
                        blank=True,
                        db_column="codigoHabilitacion",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("chasisnro", models.CharField(db_column="ChasisNro", max_length=50)),
                ("motoranio", models.IntegerField(db_column="MotorAnio")),
                ("motormarca", models.CharField(db_column="MotorMarca", max_length=50)),
                (
                    "motornumero",
                    models.CharField(db_column="MotorNumero", max_length=50),
                ),
                (
                    "idlocalidadvehiculo",
                    models.IntegerField(db_column="idLocalidadVehiculo"),
                ),
                (
                    "tipodocconductor",
                    models.CharField(db_column="TipoDocConductor", max_length=10),
                ),
                ("nrodocconductor", models.IntegerField(db_column="NroDocConductor")),
                (
                    "nombreconductor",
                    models.CharField(db_column="NombreConductor", max_length=50),
                ),
                (
                    "apellidoconductor",
                    models.CharField(db_column="ApellidoConductor", max_length=50),
                ),
                (
                    "reverificacion",
                    models.IntegerField(
                        blank=True, db_column="Reverificacion", null=True
                    ),
                ),
                (
                    "idverificacionoriginal",
                    models.IntegerField(
                        blank=True, db_column="idVerificacionOriginal", null=True
                    ),
                ),
                (
                    "inspector",
                    models.CharField(
                        blank=True, db_column="Inspector", max_length=100, null=True
                    ),
                ),
                (
                    "directortecnico",
                    models.CharField(
                        blank=True,
                        db_column="DirectorTecnico",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "eje1_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje1_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje1_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje2_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje2_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje3_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje3_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje4_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje4_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_fzaizq",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_FzaIzq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eje5_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Eje5_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "alineacion",
                    models.CharField(
                        blank=True, db_column="Alineacion", max_length=50, null=True
                    ),
                ),
                (
                    "nivelsonoro",
                    models.CharField(
                        blank=True, db_column="NivelSonoro", max_length=50, null=True
                    ),
                ),
                (
                    "interior",
                    models.IntegerField(blank=True, db_column="Interior", null=True),
                ),
                (
                    "escape",
                    models.IntegerField(blank=True, db_column="Escape", null=True),
                ),
                (
                    "bach",
                    models.DecimalField(
                        blank=True,
                        db_column="Bach",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "porcentajeco",
                    models.DecimalField(
                        blank=True,
                        db_column="PorcentajeCo",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "opac",
                    models.DecimalField(
                        blank=True,
                        db_column="Opac",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "ppmhc",
                    models.DecimalField(
                        blank=True,
                        db_column="ppmHC",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_fzaisq",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_FzaIsq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "freno_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Freno_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cccf",
                    models.CharField(
                        blank=True, db_column="CCCF", max_length=50, null=True
                    ),
                ),
                (
                    "marcatac",
                    models.CharField(
                        blank=True, db_column="MarcaTac", max_length=50, null=True
                    ),
                ),
                (
                    "nrotac",
                    models.CharField(
                        blank=True, db_column="NroTac", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje1",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje1", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje2",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje2", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje3",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje3", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje4",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje4", max_length=50, null=True
                    ),
                ),
                (
                    "rodadotac_eje5",
                    models.CharField(
                        blank=True, db_column="RodadoTac_Eje5", max_length=50, null=True
                    ),
                ),
                (
                    "nrointerno",
                    models.CharField(
                        blank=True, db_column="NroInterno", max_length=50, null=True
                    ),
                ),
                (
                    "descripciontitular",
                    models.CharField(db_column="DescripcionTitular", max_length=150),
                ),
                (
                    "susp_fzaisq",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_FzaIsq",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "susp_fzader",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_FzaDer",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "susp_dif",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_Dif",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "susp_eficiencia",
                    models.DecimalField(
                        blank=True,
                        db_column="Susp_Eficiencia",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("observaciones", models.TextField(db_column="Observaciones")),
                (
                    "companiaseguro",
                    models.CharField(
                        blank=True, db_column="CompaniaSeguro", max_length=50, null=True
                    ),
                ),
                (
                    "nropoliza",
                    models.CharField(
                        blank=True, db_column="NroPoliza", max_length=50, null=True
                    ),
                ),
                (
                    "ultimorecpatente",
                    models.CharField(
                        blank=True,
                        db_column="UltimoRecPatente",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "idtipouso",
                    models.IntegerField(
                        db_column="idTipoUso", verbose_name="Tipo de Uso"
                    ),
                ),
                (
                    "usuariocarga",
                    models.CharField(
                        blank=True, db_column="usuarioCarga", max_length=50, null=True
                    ),
                ),
                (
                    "idtipovehiculo",
                    models.IntegerField(
                        blank=True,
                        db_column="idTipoVehiculo",
                        null=True,
                        verbose_name="Tipo de Vehiculo",
                    ),
                ),
                (
                    "vmarca",
                    models.CharField(
                        blank=True, db_column="VMarca", max_length=100, null=True
                    ),
                ),
                (
                    "vmodelo",
                    models.CharField(
                        blank=True, db_column="VModelo", max_length=100, null=True
                    ),
                ),
                (
                    "vanio",
                    models.IntegerField(blank=True, db_column="VAnio", null=True),
                ),
                (
                    "chasismarca",
                    models.CharField(
                        blank=True, db_column="ChasisMarca", max_length=100, null=True
                    ),
                ),
                (
                    "chasisanio",
                    models.IntegerField(blank=True, db_column="ChasisAnio", null=True),
                ),
                (
                    "tipocombustible",
                    models.CharField(
                        blank=True,
                        db_column="TipoCombustible",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "vpotencia",
                    models.CharField(
                        blank=True, db_column="VPotencia", max_length=20, null=True
                    ),
                ),
                (
                    "nroejes",
                    models.IntegerField(blank=True, db_column="NroEjes", null=True),
                ),
                (
                    "vcaja",
                    models.CharField(
                        blank=True, db_column="VCaja", max_length=50, null=True
                    ),
                ),
                (
                    "pocisionmotor",
                    models.CharField(
                        blank=True, db_column="PocisionMotor", max_length=50, null=True
                    ),
                ),
                ("aniofabricacion", models.IntegerField(db_column="AnioFabricacion")),
                (
                    "carroceria",
                    models.CharField(
                        blank=True, db_column="Carroceria", max_length=50, null=True
                    ),
                ),
                (
                    "expediente",
                    models.CharField(
                        blank=True, db_column="Expediente", max_length=50, null=True
                    ),
                ),
                (
                    "aireaco",
                    models.IntegerField(blank=True, db_column="AireAco", null=True),
                ),
                ("bar", models.IntegerField(blank=True, db_column="Bar", null=True)),
                (
                    "banio",
                    models.IntegerField(blank=True, db_column="Banio", null=True),
                ),
                (
                    "calefaccion",
                    models.IntegerField(blank=True, db_column="Calefaccion", null=True),
                ),
                (
                    "suspencion",
                    models.CharField(
                        blank=True, db_column="Suspencion", max_length=50, null=True
                    ),
                ),
                (
                    "tara",
                    models.DecimalField(
                        blank=True,
                        db_column="Tara",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "pesomax",
                    models.DecimalField(
                        blank=True,
                        db_column="PesoMax",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cargautil",
                    models.DecimalField(
                        blank=True,
                        db_column="CargaUtil",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "asientos",
                    models.IntegerField(blank=True, db_column="Asientos", null=True),
                ),
                (
                    "idloctmserv",
                    models.IntegerField(blank=True, db_column="idLocTMServ", null=True),
                ),
                (
                    "tiposervtm",
                    models.CharField(
                        blank=True, db_column="TipoServTM", max_length=100, null=True
                    ),
                ),
                (
                    "idtiposervicio",
                    models.IntegerField(
                        blank=True, db_column="idTipoServicio", null=True
                    ),
                ),
                (
                    "idclaseservicio",
                    models.IntegerField(
                        blank=True, db_column="idClaseServicio", null=True
                    ),
                ),
                (
                    "prestadorserv",
                    models.CharField(
                        blank=True, db_column="prestadorServ", max_length=100, null=True
                    ),
                ),
                (
                    "cuitprestserv",
                    models.CharField(
                        blank=True, db_column="CuitPrestServ", max_length=15, null=True
                    ),
                ),
                (
                    "ptipodoc",
                    models.CharField(
                        blank=True, db_column="PTipoDoc", max_length=10, null=True
                    ),
                ),
                (
                    "pnrodoc",
                    models.IntegerField(blank=True, db_column="PNroDoc", null=True),
                ),
                (
                    "pcuit",
                    models.CharField(
                        blank=True, db_column="PCuit", max_length=15, null=True
                    ),
                ),
                (
                    "pdomicilio",
                    models.CharField(
                        blank=True, db_column="PDomicilio", max_length=200, null=True
                    ),
                ),
                (
                    "ptelefono",
                    models.CharField(
                        blank=True, db_column="PTelefono", max_length=50, null=True
                    ),
                ),
                (
                    "pemail",
                    models.CharField(
                        blank=True, db_column="PEmail", max_length=200, null=True
                    ),
                ),
                (
                    "pidlocalidad",
                    models.IntegerField(
                        blank=True, db_column="PidLocalidad", null=True
                    ),
                ),
                (
                    "ptipopersona",
                    models.CharField(
                        blank=True, db_column="PTipoPersona", max_length=1, null=True
                    ),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                (
                    "tipocarga",
                    models.CharField(
                        blank=True, db_column="TipoCarga", max_length=50, null=True
                    ),
                ),
                (
                    "pcodigopj",
                    models.CharField(
                        blank=True, db_column="PCodigoPJ", max_length=30, null=True
                    ),
                ),
                (
                    "certificadodiscapacidad",
                    models.CharField(
                        blank=True,
                        db_column="CertificadoDiscapacidad",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "firma",
                    models.CharField(
                        blank=True, db_column="Firma", max_length=100, null=True
                    ),
                ),
                (
                    "nrofactura",
                    models.CharField(
                        blank=True, db_column="nroFactura", max_length=100, null=True
                    ),
                ),
                (
                    "codigotitular",
                    models.ForeignKey(
                        db_column="CodigoTitular",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.personas",
                    ),
                ),
                (
                    "dominiovehiculo",
                    models.ForeignKey(
                        db_column="DominioVehiculo",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.vehiculos",
                        verbose_name="Dominio",
                    ),
                ),
                (
                    "idestado",
                    models.ForeignKey(
                        db_column="idEstado",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.estados",
                        verbose_name="Calificación",
                    ),
                ),
                (
                    "idtaller",
                    models.ForeignKey(
                        db_column="idTaller",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.talleres",
                        verbose_name="Planta",
                    ),
                ),
            ],
            options={
                "db_table": "verificaciones",
            },
        ),
        migrations.CreateModel(
            name="Verificacionesauditorias",
            fields=[
                (
                    "idauditoria",
                    models.AutoField(
                        db_column="idAuditoria", primary_key=True, serialize=False
                    ),
                ),
                ("fechacarga", models.DateTimeField(db_column="FechaCarga")),
                ("idverificacion", models.IntegerField(db_column="idVerificacion")),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                ("observaciones", models.TextField(db_column="Observaciones")),
                ("conforme", models.IntegerField(db_column="Conforme")),
            ],
            options={
                "db_table": "verificacionesauditorias",
            },
        ),
        migrations.CreateModel(
            name="Vin",
            fields=[
                (
                    "idvin",
                    models.AutoField(
                        db_column="idVin", primary_key=True, serialize=False
                    ),
                ),
                ("letra", models.TextField()),
                ("aniovin", models.IntegerField(db_column="anioVin")),
            ],
            options={
                "db_table": "vin",
            },
        ),
        migrations.CreateModel(
            name="Auditoriasequipos",
            fields=[
                (
                    "idauditoria",
                    models.OneToOneField(
                        db_column="idAuditoria",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="rto_consultas.auditorias",
                    ),
                ),
                ("idtaller", models.IntegerField(db_column="idTaller")),
                (
                    "funcionamientocorrecto",
                    models.IntegerField(db_column="FuncionamientoCorrecto"),
                ),
                (
                    "observaciones",
                    models.CharField(db_column="Observaciones", max_length=500),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "auditoriasequipos",
            },
        ),
        migrations.CreateModel(
            name="Categoriastalleres",
            fields=[
                (
                    "idcategoria",
                    models.OneToOneField(
                        db_column="idCategoria",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="rto_consultas.categorias",
                    ),
                ),
                (
                    "porcentaje",
                    models.DecimalField(
                        db_column="Porcentaje", decimal_places=2, max_digits=10
                    ),
                ),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
            ],
            options={
                "db_table": "categoriastalleres",
            },
        ),
        migrations.CreateModel(
            name="Pendientesdefectos",
            fields=[
                (
                    "idpendiente",
                    models.OneToOneField(
                        db_column="idPendiente",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="rto_consultas.pendientes",
                    ),
                ),
                ("iddefecto", models.IntegerField(db_column="idDefecto")),
                ("idnivel", models.IntegerField(db_column="idNivel")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                (
                    "descripcionrubro",
                    models.CharField(db_column="DescripcionRubro", max_length=64),
                ),
                (
                    "descripciondefecto",
                    models.CharField(db_column="DescripcionDefecto", max_length=200),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=160),
                ),
                ("activo", models.IntegerField(db_column="Activo")),
            ],
            options={
                "db_table": "pendientesdefectos",
            },
        ),
        migrations.CreateModel(
            name="Usuariostaller",
            fields=[
                (
                    "idusuario",
                    models.OneToOneField(
                        db_column="idUsuario",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="rto_consultas.usuarios",
                    ),
                ),
            ],
            options={
                "db_table": "usuariostaller",
            },
        ),
        migrations.CreateModel(
            name="Verificacionesdefectos",
            fields=[
                (
                    "idverificacion",
                    models.OneToOneField(
                        db_column="idVerificacion",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="rto_consultas.verificaciones",
                    ),
                ),
                ("iddefecto", models.IntegerField(db_column="idDefecto")),
                ("replicado", models.IntegerField(db_column="Replicado")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                (
                    "descripcionrubro",
                    models.CharField(db_column="DescripcionRubro", max_length=200),
                ),
                (
                    "descripciondefecto",
                    models.CharField(db_column="DescripcionDefecto", max_length=200),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=160),
                ),
            ],
            options={
                "db_table": "verificacionesdefectos",
            },
        ),
        migrations.CreateModel(
            name="Verificacionesservicios",
            fields=[
                (
                    "idverificacionesservicios",
                    models.AutoField(
                        db_column="idVerificacionesServicios",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("idservicio", models.IntegerField(db_column="idServicio")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="fechaHoraRep", null=True
                    ),
                ),
                (
                    "idtaller",
                    models.ForeignKey(
                        db_column="idTaller",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.talleres",
                    ),
                ),
                (
                    "idverificacion",
                    models.ForeignKey(
                        db_column="idVerificacion",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.verificaciones",
                    ),
                ),
            ],
            options={
                "db_table": "verificacionesservicios",
            },
        ),
        migrations.CreateModel(
            name="Verificacionespdf",
            fields=[
                (
                    "idpdf",
                    models.IntegerField(
                        db_column="idPDF", primary_key=True, serialize=False
                    ),
                ),
                ("nombrea4", models.CharField(db_column="NombreA4", max_length=200)),
                ("nombretc", models.CharField(db_column="NombreTC", max_length=200)),
                ("hasha4", models.CharField(db_column="HashA4", max_length=200)),
                ("fechacarga", models.DateField(db_column="FechaCarga")),
                (
                    "fechahorarep",
                    models.DateTimeField(
                        blank=True, db_column="FechaHoraRep", null=True
                    ),
                ),
                ("enviado", models.IntegerField(db_column="Enviado")),
                (
                    "idtaller",
                    models.ForeignKey(
                        db_column="idTaller",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.talleres",
                    ),
                ),
                (
                    "idverificacion",
                    models.ForeignKey(
                        db_column="idVerificacion",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rto_consultas.verificaciones",
                    ),
                ),
            ],
            options={
                "db_table": "verificacionesPDF",
            },
        ),
        migrations.CreateModel(
            name="Tipovehiculo",
            fields=[
                (
                    "idtipovehiculo",
                    models.AutoField(
                        db_column="idTipoVehiculo", primary_key=True, serialize=False
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(db_column="Descripcion", max_length=100),
                ),
                ("fiscalizable", models.IntegerField(db_column="Fiscalizable")),
                (
                    "tipovehiculo",
                    models.CharField(db_column="tipoVehiculo", max_length=11),
                ),
                ("activo", models.IntegerField()),
            ],
            options={
                "db_table": "tipovehiculo",
                "indexes": [
                    models.Index(
                        fields=["idtipovehiculo"], name="tipovehicul_idTipoV_7331aa_idx"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="tipousovehiculo",
            index=models.Index(
                fields=["idtipouso"], name="tipousovehi_idTipoU_0bd423_idx"
            ),
        ),
        migrations.AddField(
            model_name="talleres",
            name="idlocalidad",
            field=models.ForeignKey(
                db_column="idLocalidad",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.localidades",
            ),
        ),
        migrations.AddField(
            model_name="serviciohab",
            name="idhabilitacion",
            field=models.ForeignKey(
                db_column="idHabilitacion",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.habilitacion",
            ),
        ),
        migrations.AddField(
            model_name="serviciohab",
            name="idserviciostransportehab",
            field=models.ForeignKey(
                db_column="idServiciosTransporteHab",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.serviciostransportehab",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="personas",
            unique_together={("tipodoc", "nrodoc")},
        ),
        migrations.AddField(
            model_name="pendientesservicios",
            name="idpendiente",
            field=models.ForeignKey(
                db_column="idPendiente",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.pendientes",
            ),
        ),
        migrations.AddField(
            model_name="pendientesservicios",
            name="idservicio",
            field=models.ForeignKey(
                db_column="idServicio",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.serviciostransporte",
            ),
        ),
        migrations.AddField(
            model_name="pendientesservicios",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="pendientes",
            unique_together={("idpendiente", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="noconformidades",
            unique_together={("idnc", "idtaller")},
        ),
        migrations.AddField(
            model_name="mantenimientos",
            name="idequipo",
            field=models.ForeignKey(
                db_column="idEquipo",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.equipos",
            ),
        ),
        migrations.AddField(
            model_name="localidades",
            name="idprovincia",
            field=models.ForeignKey(
                db_column="idProvincia",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.provincias",
            ),
        ),
        migrations.AddField(
            model_name="lineastaller",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="lineasequipos",
            unique_together={("idequipo", "idtaller", "nrolinea", "fechadesde")},
        ),
        migrations.AddField(
            model_name="instalaciones",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inspectoresusuarios",
            unique_together={("idtaller", "idusuario", "idinspector")},
        ),
        migrations.AddField(
            model_name="inspectores",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="fotovalidacionpatente",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="excepcion",
            unique_together={("idexcepcion", "idtaller")},
        ),
        migrations.AddIndex(
            model_name="estados",
            index=models.Index(fields=["idestado"], name="estados_idEstad_585139_idx"),
        ),
        migrations.AddField(
            model_name="equipos",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="direcotrestecnicos",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="defectos",
            name="idrubro",
            field=models.ForeignKey(
                db_column="idRubro",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.rubrosdefectos",
            ),
        ),
        migrations.AddField(
            model_name="convenios",
            name="idprovincia",
            field=models.ForeignKey(
                db_column="idProvincia",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.provincias",
            ),
        ),
        migrations.AddField(
            model_name="certificadosasignadosportaller",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="certificados",
            name="idconvenio",
            field=models.ForeignKey(
                blank=True,
                db_column="idConvenio",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.convenios",
            ),
        ),
        migrations.AddField(
            model_name="certificados",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="certificados",
            name="idverificacion",
            field=models.ForeignKey(
                db_column="idVerificacion",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="certificados",
                to="rto_consultas.verificaciones",
            ),
        ),
        migrations.AddField(
            model_name="cccfusuarios",
            name="idtaller",
            field=models.ForeignKey(
                blank=True,
                db_column="idTaller",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.cccftalleres",
            ),
        ),
        migrations.AddField(
            model_name="cccfnroscertificadosasignados",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.cccftalleres",
            ),
        ),
        migrations.AddField(
            model_name="cccfcertificados",
            name="idempresa",
            field=models.ForeignKey(
                db_column="idEmpresa",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.cccfempresas",
            ),
        ),
        migrations.AddField(
            model_name="cccfcertificados",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.cccftalleres",
            ),
        ),
        migrations.AddField(
            model_name="cccfcertificadoexcesos",
            name="idcertificado",
            field=models.ForeignKey(
                db_column="idCertificado",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.cccfcertificados",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="auditorias",
            unique_together={("idauditoria", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="administrativosusuarios",
            unique_together={("idtaller", "idusuario", "idadministrativo")},
        ),
        migrations.AddField(
            model_name="administrativos",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="adjuntosprorroga",
            name="idprorroga",
            field=models.ForeignKey(
                db_column="idProrroga",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.prorroga",
            ),
        ),
        migrations.AddField(
            model_name="adjuntosprorroga",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="adjuntospendientes",
            unique_together={("idarchivo", "idtaller")},
        ),
        migrations.AddField(
            model_name="adjuntosexcepcion",
            name="idexcepcion",
            field=models.ForeignKey(
                db_column="idExcepcion",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.excepcion",
            ),
        ),
        migrations.AddField(
            model_name="adjuntosexcepcion",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="adjuntosauditoria",
            name="idauditoria",
            field=models.ForeignKey(
                db_column="idAuditoria",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.auditorias",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="adjuntos",
            unique_together={("idarchivo", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="verificacionesservicios",
            unique_together={("idverificacionesservicios", "idtaller", "idservicio")},
        ),
        migrations.AlterUniqueTogether(
            name="verificacionespdf",
            unique_together={("idpdf", "idtaller")},
        ),
        migrations.AddField(
            model_name="verificacionesdefectos",
            name="idnivel",
            field=models.ForeignKey(
                db_column="idNivel",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.nivelesdefectos",
            ),
        ),
        migrations.AddField(
            model_name="verificacionesdefectos",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddIndex(
            model_name="verificaciones",
            index=models.Index(
                fields=["idverificacion", "idtaller"],
                name="verificacio_idVerif_fd9b0d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="verificaciones",
            index=models.Index(
                fields=["idtipouso"], name="verificacio_idTipoU_194eff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="verificaciones",
            index=models.Index(
                fields=["idhabilitacion"], name="verificacio_idHabil_2efd7e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="verificaciones",
            index=models.Index(
                fields=["idestado"], name="verificacio_idEstad_e2862f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="verificaciones",
            index=models.Index(
                fields=["idtipovehiculo"], name="verificacio_idTipoV_b5bd8a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="verificaciones",
            unique_together={("idverificacion", "idtaller")},
        ),
        migrations.AddField(
            model_name="usuariostaller",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddIndex(
            model_name="talleres",
            index=models.Index(fields=["idtaller"], name="talleres_idTalle_bb673b_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="pendientesservicios",
            unique_together={("idpendienteservicios", "idtaller", "idservicio")},
        ),
        migrations.AddField(
            model_name="pendientesdefectos",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mantenimientos",
            unique_together={("idmantenimiento", "idtaller")},
        ),
        migrations.AddIndex(
            model_name="localidades",
            index=models.Index(
                fields=["idlocalidad"], name="localidades_idLocal_59324d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="lineastaller",
            unique_together={("nrolinea", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="instalaciones",
            unique_together={("idinstalacion", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="inspectores",
            unique_together={("idinspector", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="fotovalidacionpatente",
            unique_together={("idfotovalidacion", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="equipos",
            unique_together={("idequipo", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="direcotrestecnicos",
            unique_together={("iddirector", "idtaller")},
        ),
        migrations.AddIndex(
            model_name="certificados",
            index=models.Index(
                fields=["idcertificado", "idtaller"],
                name="certificado_idCerti_0534f7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="certificados",
            index=models.Index(
                fields=["idverificacion", "idtaller"],
                name="certificado_idVerif_4004c0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="certificados",
            index=models.Index(
                fields=["idtaller"], name="certificado_idTalle_041911_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="certificados",
            unique_together={("idcertificado", "idtaller")},
        ),
        migrations.AddField(
            model_name="categoriastalleres",
            name="idtaller",
            field=models.ForeignKey(
                db_column="idTaller",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.talleres",
            ),
        ),
        migrations.AddField(
            model_name="auditoriasequipos",
            name="idequipo",
            field=models.ForeignKey(
                db_column="idEquipo",
                on_delete=django.db.models.deletion.CASCADE,
                to="rto_consultas.equipos",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="administrativos",
            unique_together={("idadministrativo", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="verificacionesdefectos",
            unique_together={("idverificacion", "idtaller", "iddefecto")},
        ),
        migrations.AlterUniqueTogether(
            name="usuariostaller",
            unique_together={("idusuario", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="pendientesdefectos",
            unique_together={("idpendiente", "idtaller", "iddefecto")},
        ),
        migrations.AlterUniqueTogether(
            name="categoriastalleres",
            unique_together={("idcategoria", "idtaller")},
        ),
        migrations.AlterUniqueTogether(
            name="auditoriasequipos",
            unique_together={("idauditoria", "idtaller", "idequipo")},
        ),
    ]
